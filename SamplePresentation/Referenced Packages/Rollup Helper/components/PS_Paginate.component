<apex:component >
	<!-- The pageController attribute is the name of the PS_PaginatepageController created by the VF page with this
		 component that will be controlling the pagination. -->
	<apex:attribute name="pageController" description="The pageController that will allow for pagination" type="rh2.PS_PaginateController" required="true" />
	<!-- The renderedComponent attribute refers to the id of the component that will be re-rendered on
		 the page that implements this component. This will likely be the component that contains the
		 paginated content. -->
	<apex:attribute name="renderedComponent" description="The component that will be rerendered when a page is clicked" type="String" required="true" />
	
	<Style>
		.pageNumber {
			margin: 4px;
			display: inline;
		}
	</Style>
	
	<apex:outputPanel style="width:100%;" id="rollupExport">
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.farFromFirstPage }" value="1" action="{! pageController.goToFirstPage }" rerender="{! renderedComponent }" />
		<apex:outputText rendered="{! pageController.pT.hasLeftOverflow }" value=" ... " styleClass="pageNumber" />
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.hasTwoPagesPrevious }" value="{! pageController.pT.pageNumber - 2 }" action="{! pageController.goTwoPagesLeft }" rerender="{! renderedComponent }" />
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.hasPreviousPage }" value="{! pageController.pT.pageNumber - 1 }" action="{! pageController.goToPreviousPage }" rerender="{! renderedComponent }" />
		<apex:outputText styleClass="pageNumber" style="color: blue;" value=" {! pageController.pT.pageNumber } "
			rendered="{! OR( pageController.pT.hasPreviousPage, pageController.pT.hasNextPage ) }" />
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.hasNextPage }" value="{! pageController.pT.pageNumber + 1 }" action="{! pageController.goToNextPage }" rerender="{! renderedComponent }" />
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.hasTwoPagesNext }" value="{! pageController.pT.pageNumber + 2 }" action="{! pageController.goTwoPagesRight }" rerender="{! renderedComponent }" />
		<apex:outputText rendered="{! pageController.pT.hasRightOverflow }" value=" ... " styleClass="pageNumber" />
		<apex:commandLink styleClass="pageNumber" rendered="{! pageController.pT.farFromLastPage }" value="{! pageController.pT.maxPageNumber }" action="{! pageController.goToLastPage }" rerender="{! renderedComponent }" />
		<apex:commandLink styleClass="pageNumber" style="padding-left:15px;" value="Show All" action="{! pageController.showAll }" rendered="{! AND( OR( pageController.pT.hasPreviousPage, pageController.pT.hasNextPage ), pageController.canShowAll ) }" rerender="{! renderedComponent }" />
		<apex:commandLink styleClass="pageNumber" value="Show Less" action="{! pageController.showLess }" rendered="{! AND( pageController.showingAll, pageController.canShowAll ) }" rerender="{! renderedComponent }" />			
	</apex:outputPanel>
</apex:component>